{"version":3,"sources":["actions/unitActions.js","reducers/selectionReducer.js","actions/optionActions.js","reducers/optionReducer.js","actions/convertActions.js","conversion/unitConversion.js","reducers/conversionReducer.js","store/store.js","components/dropdown.js","components/options.js","components/control.js","components/interact.js","components/convert.js","serviceWorker.js","index.js"],"names":["TEMP","lengthAction","type","weigthAction","tempAction","selectionDefault","unitClass","FROMINCH","FROMFEET","TOINCH","TOFEET","TOMETER","TOGRAM","TOOUNCE","TOPOUND","fromMillimeterAction","val","counterUnit","options","symbol","fromCentimeterAction","fromInchAction","fromFeetAction","fromMeterAction","fromKilometerAction","toMillimeterAction","toCentimeterAction","toInchAction","toFeetAction","toMeterAction","toKilometerAction","fromFahrenheitAction","fromCelsiusAction","fromKelvinAction","toFahrenheitAction","toCelsiusAction","toKelvinAction","fromMilligramAction","fromGramAction","fromOunceAction","fromPoundAction","fromKilogramAction","toMilligramAction","toGramAction","toOunceAction","toPoundAction","toKilogramAction","initializeLength","fromUnit","fromUnitOptions","toUnit","toUnitOptions","initializeWeight","initializeTemp","fromAssignState","stateValue","actionValue","Object","assign","toAssignState","errorValues","NaN","convertAction","event","from_Unit","to_Unit","data","includes","target","value","lengthList","weightList","tempList","lengthConversionValues","toMillimeter","toCentimeter","toInch","toFeet","toMeter","toKilometer","weightConversionValues","toMilligram","toGram","toOunce","toPound","toKilogram","convert","number","unitFrom","unitTo","convertLength","convertWeight","convertTemp","evaluate","anObject","rawInput","changeInput","inputValue","Math","abs","parseFloat","toString","input","endsWith","length","match","output","conversionDefault","fromSymbol","toSymbol","store","createStore","combineReducers","select","state","action","Unit","option","OA","fromArgs","toArgs","window","__REDUX_DEVTOOLS_EXTENSION__","Dropdown","unitValues","props","convertFromMillimeter","convertFromCentimeter","convertFromInch","convertFromFeet","convertFromMeter","convertFromKiloMeter","convertToMillimeter","convertToCentimeter","convertToInch","convertToFeet","convertToMeter","convertToKiloMeter","convertFromFahrenheit","convertFromCelsius","convertFromKelvin","convertToFahrenheit","convertToCelsius","convertToKelvin","convertFromMillgram","convertFromGram","convertFromOunce","convertFromPound","convertFromKilogram","convertToMillgram","convertToGram","convertToOunce","convertToPound","convertToKilogram","className","this","label","choice","map","item","id","key","onClick","React","Component","connect","dispatch","bindActionCreators","Option","class","aria-hidden","Button","callback","tabIndex","style","Control","lengthValue","selectLength","weightValue","selectWeight","tempValue","selectTemp","Interact","min","onChange","Convert","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.48a7a33a.chunk.js","sourcesContent":["\n// Unit Action types\nexport const LENGTH = 'length';\nexport const WEIGHT = 'weight';\nexport const TEMP   = 'tempreature';\n\n// Unit Action creators\nexport const lengthAction = ()=>{return {type:LENGTH}};\nexport const weigthAction = ()=>{return {type: WEIGHT}};\nexport const tempAction   = ()=>{return {type: TEMP}};\n","import * as Unit from './../actions/unitActions.js';\n\nconst selectionDefault = {unitClass: ['active','','']};\n\n// Reducer for the Control Component\nexport default function unitSelectionReducer(state = selectionDefault, action){\n\n  switch (action.type) {\n    case Unit.LENGTH:\n      return {unitClass: ['active','','']}\n    case Unit.WEIGHT:\n      return {unitClass: ['','active','']}\n    case Unit.TEMP:\n      return {unitClass: ['','','active']}\n    default:\n      return state;\n  }\n}\n","\n// length action types\nexport const FROMMILLIMETER = 'fromMillimeter';\nexport const FROMCENTIMETER = 'fromCentimeter';\nexport const FROMINCH       = 'fromInch';\nexport const FROMFEET       = 'fromFeet';\nexport const FROMMETER      = 'fromMeter';\nexport const FROMKILOMETER  = 'fromKilometer';\n\nexport const TOMILLIMETER   = 'toMillimeter';\nexport const TOCENTIMETER   = 'toCentimeter';\nexport const TOINCH         = 'toInch';\nexport const TOFEET         = 'toFeet';\nexport const TOMETER        = 'toMeter';\nexport const TOKILOMETER    = 'toKilometer';\n// Temperature action types\nexport const FROMFAHRENHEIT = 'fromFahrenheit';\nexport const FROMCELSIUS    = 'fromCelsius';\nexport const FROMKELVIN     = 'fromKelvin';\n\nexport const TOFAHRENHEIT   = 'toFahrenheit';\nexport const TOCELSIUS      = 'toCelsius';\nexport const TOKELVIN       = 'toKelvin';\n// Weight action Types\nexport const FROMMILLIGRAM  = 'fromMilligram';\nexport const FROMGRAM       = 'fromGram';\nexport const FROMOUNCE      = 'fromOunce';\nexport const FROMPOUND      = 'fromPound';\nexport const FROMKILOGRAM   = 'fromKilogram';\n\nexport const TOMILLIGRAM  = 'toMilligram';\nexport const TOGRAM       = 'toGram';\nexport const TOOUNCE      = 'toOunce';\nexport const TOPOUND      = 'toPound';\nexport const TOKILOGRAM   = 'toKilogram';\n\n// Length Action Creators\nexport const fromMillimeterAction = (val)=>{return{\n        counterUnit: val, type: FROMMILLIMETER,\n        options:[FROMCENTIMETER,FROMINCH,FROMFEET,FROMMETER,FROMKILOMETER],\n        symbol: 'mm'\n      }};\nexport const fromCentimeterAction = (val)=>{return{\n        counterUnit: val, type: FROMCENTIMETER,\n        options:[FROMMILLIMETER,FROMINCH,FROMFEET,FROMMETER,FROMKILOMETER],\n        symbol: 'cm'\n      }};\nexport const fromInchAction = (val)=>{return{ counterUnit: val, type: FROMINCH,\n        options:[FROMMILLIMETER,FROMCENTIMETER,FROMFEET,FROMMETER,FROMKILOMETER],\n        symbol: 'in'\n      }};\nexport const fromFeetAction = (val)=>{return{ counterUnit: val, type: FROMFEET,\n        options:[FROMMILLIMETER,FROMCENTIMETER,FROMINCH,FROMMETER,FROMKILOMETER],\n        symbol: 'ft'\n      }};\nexport const fromMeterAction = (val)=>{return{ counterUnit: val, type: FROMMETER,\n        options:[FROMMILLIMETER,FROMCENTIMETER,FROMINCH,FROMFEET,FROMKILOMETER],\n        symbol: 'm'\n      }};\nexport const fromKilometerAction = (val)=>{return{\n        counterUnit: val, type: FROMKILOMETER,\n        options:[FROMMILLIMETER,FROMCENTIMETER,FROMINCH,FROMFEET,FROMMETER],\n        symbol: 'km'\n      }};\n\nexport const toMillimeterAction = (val)=>{return{\n        counterUnit: val, type: TOMILLIMETER,\n        options:[TOCENTIMETER,TOINCH,TOFEET,TOMETER,TOKILOMETER],\n        symbol: 'mm'\n      }};\nexport const toCentimeterAction = (val)=>{return{\n        counterUnit: val, type: TOCENTIMETER,\n        options:[TOMILLIMETER ,TOINCH,TOFEET,TOMETER,TOKILOMETER],\n        symbol: 'cm'\n      }};\nexport const toInchAction = (val)=>{return{ counterUnit: val, type: TOINCH,\n        options:[TOMILLIMETER ,TOCENTIMETER,TOFEET,TOMETER,TOKILOMETER],\n        symbol: 'in'\n      }};\nexport const toFeetAction = (val)=>{return{ counterUnit: val, type: TOFEET,\n        options:[TOMILLIMETER ,TOCENTIMETER,TOINCH,TOMETER,TOKILOMETER],\n        symbol: 'ft'\n      }};\nexport const toMeterAction = (val)=>{return{ counterUnit: val, type: TOMETER,\n        options:[TOMILLIMETER ,TOCENTIMETER,TOINCH,TOFEET,TOKILOMETER],\n        symbol: 'm'\n      }};\nexport const toKilometerAction = (val)=>{return{\n        counterUnit: val, type: TOKILOMETER,\n        options:[TOMILLIMETER ,TOCENTIMETER,TOINCH,TOFEET,TOMETER],\n        symbol: 'km'\n      }};\n\n// Temperature actions creators\nexport const fromFahrenheitAction = (val)=>{return{\n        counterUnit: val, type: FROMFAHRENHEIT, options:[FROMCELSIUS,FROMKELVIN],\n        symbol: '°F'\n      }};\nexport const fromCelsiusAction = (val)=>{return{\n        counterUnit: val, type: FROMCELSIUS, options:[FROMFAHRENHEIT,FROMKELVIN],\n        symbol: '°C'\n      }};\nexport const fromKelvinAction = (val)=>{return{\n        counterUnit: val, type: FROMKELVIN, options:[FROMFAHRENHEIT,FROMCELSIUS],\n        symbol: '°K'\n      }};\n\nexport const toFahrenheitAction = (val)=>{return{\n        counterUnit: val, type: TOFAHRENHEIT, options:[TOCELSIUS,TOKELVIN],\n        symbol: '°F' \n      }};\nexport const toCelsiusAction = (val)=>{return{\n        counterUnit: val, type: TOCELSIUS, options:[TOFAHRENHEIT,TOKELVIN],\n        symbol: '°C'\n      }};\nexport const toKelvinAction = (val)=>{return{\n        counterUnit: val, type: TOKELVIN, options:[TOFAHRENHEIT,TOCELSIUS],\n        symbol: '°K'\n      }};\n\n// Weight actions creators\nexport const fromMilligramAction = (val)=>{return {\n        counterUnit: val, type:FROMMILLIGRAM,\n        options: [FROMGRAM, FROMOUNCE, FROMPOUND, FROMKILOGRAM], symbol: 'mg'\n      }};\nexport const fromGramAction = (val)=>{return { counterUnit: val, type:FROMGRAM,\n        options: [FROMMILLIGRAM, FROMOUNCE, FROMPOUND, FROMKILOGRAM], symbol: 'g '\n      }};\nexport const fromOunceAction = (val)=>{return { counterUnit: val, type: FROMOUNCE,\n        options: [FROMMILLIGRAM, FROMGRAM, FROMPOUND, FROMKILOGRAM], symbol: 'oz'\n      }};\nexport const fromPoundAction = (val)=>{return { counterUnit: val, type: FROMPOUND,\n        options: [FROMMILLIGRAM, FROMGRAM, FROMOUNCE, FROMKILOGRAM], symbol: 'lb'\n      }};\nexport const fromKilogramAction = (val)=>{return {\n        counterUnit: val, type: FROMKILOGRAM,\n        options: [FROMMILLIGRAM, FROMGRAM, FROMOUNCE, FROMPOUND], symbol: 'kg'\n      }};\n\nexport const toMilligramAction = (val)=>{return {\n        counterUnit: val, type:TOMILLIGRAM,\n        options: [TOGRAM, TOOUNCE, TOPOUND, TOKILOGRAM], symbol: 'mg'\n      }};\nexport const toGramAction = (val)=>{return { counterUnit: val, type:TOGRAM,\n        options: [TOMILLIGRAM, TOOUNCE, TOPOUND, TOKILOGRAM], symbol: 'g '\n      }};\nexport const toOunceAction = (val)=>{return { counterUnit: val, type: TOOUNCE,\n        options: [TOMILLIGRAM, TOGRAM, TOPOUND, TOKILOGRAM], symbol: 'oz'\n      }};\nexport const toPoundAction = (val)=>{return { counterUnit: val, type: TOPOUND,\n        options: [TOMILLIGRAM, TOGRAM, TOOUNCE, TOKILOGRAM], symbol: 'lb'\n      }};\nexport const toKilogramAction = (val)=>{return { counterUnit: val, type: TOKILOGRAM,\n        options: [TOMILLIGRAM, TOGRAM, TOOUNCE, TOPOUND], symbol: 'kg'\n      }};\n\n// Option Length initial state value\nexport const initializeLength = {\n    fromUnit: FROMMILLIMETER,\n    fromUnitOptions: [FROMCENTIMETER, FROMINCH, FROMFEET, FROMMETER, FROMKILOMETER],\n    toUnit: TOCENTIMETER,\n    toUnitOptions: [TOMILLIMETER, TOINCH, TOFEET, TOMETER, TOKILOMETER]\n};\n\n// Option Weight initial state value\nexport const initializeWeight = {\n    fromUnit: FROMMILLIGRAM,\n    fromUnitOptions: [ FROMGRAM, FROMOUNCE, FROMPOUND, FROMKILOGRAM],\n    toUnit: TOGRAM,\n    toUnitOptions: [ TOMILLIGRAM, TOOUNCE, TOPOUND, TOKILOGRAM]\n};\n// Option Temperature initial state value\nexport const initializeTemp = {\n    fromUnit: FROMFAHRENHEIT,\n    fromUnitOptions: [ FROMCELSIUS, FROMKELVIN],\n    toUnit: TOCELSIUS,\n    toUnitOptions: [ TOFAHRENHEIT, TOKELVIN]\n};\n","import * as Unit from './../actions/unitActions.js';\nimport * as OA from './../actions/optionActions.js';\n\n// Setting state for units to convert from\nconst fromAssignState = (stateValue, actionValue)=>{\n  return Object.assign(\n          {},stateValue, {fromUnit: actionValue.type, fromUnitOptions: actionValue.options}\n        );\n      };\n\n// Setting state for units to convert to\nconst toAssignState = (stateValue, actionValue)=>{\n  return Object.assign(\n          {},stateValue, {toUnit: actionValue.type, toUnitOptions: actionValue.options}\n        );\n      };\n\n// Reducer for Option Component\nexport default function conversionOptionReducer(state = OA.initializeLength, action){\n  switch (action.type) {\n    case Unit.LENGTH:\n      return OA.initializeLength;\n    case Unit.WEIGHT:\n      return OA.initializeWeight;\n    case Unit.TEMP:\n      return OA.initializeTemp;\n    case OA.FROMMILLIMETER:\n      return fromAssignState(state,action);\n    case OA.TOMILLIMETER:\n      return toAssignState(state,action);\n    case OA.FROMCENTIMETER:\n      return fromAssignState(state,action);\n    case OA.TOCENTIMETER:\n      return toAssignState(state,action);\n    case OA.FROMINCH:\n      return fromAssignState(state,action);\n    case OA.TOINCH:\n      return toAssignState(state,action);\n    case OA.FROMFEET:\n      return fromAssignState(state,action);\n    case OA.TOFEET:\n      return toAssignState(state,action);\n    case OA.FROMMETER:\n      return fromAssignState(state,action);\n    case OA.TOMETER:\n      return toAssignState(state,action);\n    case OA.FROMKILOMETER:\n      return fromAssignState(state,action);\n    case OA.TOKILOMETER:\n      return toAssignState(state,action);\n    case OA.FROMFAHRENHEIT:\n      return fromAssignState(state,action);\n    case OA.TOFAHRENHEIT:\n      return toAssignState(state,action);\n    case OA.FROMCELSIUS:\n      return fromAssignState(state,action);\n    case OA.TOCELSIUS:\n      return toAssignState(state,action);\n    case OA.FROMKELVIN:\n      return fromAssignState(state,action);\n    case OA.TOKELVIN:\n      return toAssignState(state,action);\n    case OA.FROMMILLIGRAM:\n      return fromAssignState(state,action);\n    case OA.TOMILLIGRAM:\n      return toAssignState(state,action);\n    case OA.FROMGRAM:\n      return fromAssignState(state,action);\n    case OA.TOGRAM:\n      return toAssignState(state,action);\n    case OA.FROMOUNCE:\n      return fromAssignState(state,action);\n    case OA.TOOUNCE:\n      return toAssignState(state,action);\n    case OA.FROMPOUND:\n      return fromAssignState(state,action);\n    case OA.TOPOUND:\n      return toAssignState(state,action);\n    case OA.FROMKILOGRAM:\n      return fromAssignState(state,action);\n    case OA.TOKILOGRAM:\n      return toAssignState(state,action);\n    default:\n      return state;\n  }\n}\n","\n// Convert Action type\nexport const CONVERT = 'CONVERT_INPUT';\n\n// Possible Error values list\nconst errorValues = ['', null, NaN, 'na', 'nan','Na'];\n\n// Convert Action Creator\nexport function convertAction(event,from_Unit,to_Unit){\n    var inputValue = ( errorValues.includes(event.target.value))? 0 : event.target.value;\n    \n   return {\n     type: CONVERT,\n     data: inputValue,\n     fromUnit: from_Unit,\n     toUnit: to_Unit\n   }\n }\n","\n// List of Units to convert from\nconst lengthList = ['fromMillimeter', 'fromCentimeter','fromInch','fromFeet','fromMeter','fromKilometer'];\nconst weightList = ['fromMilligram', 'fromGram','fromOunce', 'fromPound','fromKilogram'];\nconst tempList = ['fromFahrenheit',  'fromCelsius','fromKelvin'];\n\n\n// Conversion values for length units\nconst lengthConversionValues = {\n  'fromMillimeter': { toMillimeter: 1, toCentimeter: 0.01, toInch:0.0393700787,\n                      toFeet:0.0032808399, toMeter:0.001, toKilometer:0.000001\n                    },\n  'fromCentimeter': { toMillimeter: 10, toCentimeter: 1, toInch:0.3937007874,\n                      toFeet:0.032808399, toMeter:0.01, toKilometer:0.00001\n                    },\n  'fromInch':       { toMillimeter: 25.4, toCentimeter: 2.54, toInch: 1,\n                      toFeet: 0.0833333333, toMeter: 0.0254,toKilometer:0.0000254\n                    },\n  'fromFeet':       { toMillimeter: 304.8,  toCentimeter:30.48,toInch:12, toFeet:1,\n                      toMeter: 0.3048, toKilometer:0.0003048\n                    },\n  'fromMeter':      { toMillimeter: 1000, toCentimeter: 100, toInch: 39.3700787402,\n                      toFeet:3.280839895, toMeter: 1, toKilometer:0.001\n                    },\n  'fromKilometer':  { toMillimeter: 1000000, toCentimeter: 100000,\n                      toInch: 39370.078740157, toFeet: 3280.8398950131,\n                      toMeter: 1000, toKilometer: 1\n                    }\n};\n\n// Conversion values for Weight units\nconst weightConversionValues = {\n  'fromMilligram': { toMilligram: 1, toGram: 1.0e-3, toOunce: 3.5274e-5,\n                     toPound: 2.2046226218488e-6, toKilogram: 1.0e-6\n                   },\n  'fromGram':      { toMilligram:1.0e3 , toGram: 1, toOunce:3.52739619e-2,\n                     toPound: 2.2046226e-3, toKilogram:1.0e-3\n                   },\n  'fromOunce':     { toMilligram: 28349.523125, toGram:28.349523125, toOunce: 1,\n                     toPound: 6.25e-2, toKilogram: 2.83495231e-2\n                   },\n  'fromPound':     { toMilligram: 453592.37, toGram:4.5359237e2 , toOunce: 16,\n                     toPound: 1, toKilogram:4.5359237e-1\n                   },\n  'fromKilogram':  { toMilligram: 1.0e6, toGram:1.0e3 , toOunce:35.2739619496,\n                     toPound: 2.2046226218, toKilogram: 1\n                   }\n};\n\n// Convert length given a number, a Unit from and Unit to.\nconst convertLength = (number, unitFrom, unitTo)=>{\n  return (number * lengthConversionValues[unitFrom][unitTo])\n};\n\n// Convert Weight given a number, a Unit from and Unit to.\nconst convertWeight = (number, unitFrom, unitTo)=>{\n  return (number * weightConversionValues[unitFrom][unitTo])\n};\n\n// Convert Temperature given a number, a Unit from and Unit to.\nfunction convertTemp(number, unitFrom, unitTo){\n  var result ;\n  switch (unitFrom) {\n    case 'fromFahrenheit':\n      result = (unitTo === 'toCelsius')? ((5/9) * (number - 32)):\n                  (unitTo === 'toKelvin')? ((5/9) * (number + 459.67)):\n                    (unitTo === 'toFahrenheit')? number : 'NAN';\n      return result;\n    case 'fromCelsius':\n      result = (unitTo === 'toFahrenheit')? ((9/5) * number + 32):\n                  (unitTo === 'toKelvin')? (273.15 +  number):\n                      (unitTo === 'toCelsius')? number : 'NAN';\n      return result;\n    case 'fromKelvin':\n      result = (unitTo === 'toFahrenheit')? ((9/5) * number - 459.67):\n                  (unitTo === 'toCelsius')? (number - 273.15):\n                      (unitTo === 'toKelvin')? number : 'NAN';\n\n      return result;\n    default:\n      return 'NAN';\n  }\n}\n\n// Validate input as an int or float number\nexport function validateInput(rawInput, changeInput){\n return (\n   (rawInput.endsWith('.') && (changeInput.toString()).length === (rawInput.length -1) &&\n    (rawInput.match(/[.][0-9]*[.]/) === null)) ? rawInput :\n        (rawInput.endsWith('0') && rawInput.includes('.'))? rawInput :\n            (rawInput === null)? 0 : changeInput\n )\n}\n\n// Convert all unit in application\nexport function convert(number, unitFrom, unitTo){\n  return(\n    (lengthList.includes(unitFrom))? convertLength(number, unitFrom, unitTo):\n                    (weightList.includes(unitFrom))? convertWeight(number, unitFrom, unitTo):\n                        (tempList.includes(unitFrom))? convertTemp(number, unitFrom, unitTo): ''\n  )\n}\n\n// Evaluate, and validate input then convert to new unit\nexport function evaluate(anObject){\n  var inputValue = Math.abs(parseFloat(anObject.data.toString()));\n  return {\n    input: validateInput( anObject.data.toString(), inputValue),\n    output: convert(inputValue, anObject.fromUnit, anObject.toUnit )\n  };\n}\n","import * as Unit from './../actions/unitActions.js';\nimport * as OA from './../actions/optionActions.js';\nimport {CONVERT} from './../actions/convertActions.js';\nimport {evaluate} from './../conversion/unitConversion.js';\n\n\n// The default and initialing value for the Interact component and states\nconst conversionDefault = {input: 0, output: 0, fromSymbol: 'mm', toSymbol: 'cm'};\n\n// Reducer connected to the Interact component and states\nexport default function convertReducer(state= conversionDefault, action){\n  \n  var fromArgs = {data: state.input, fromUnit: action.type, toUnit: action.counterUnit };\n  var toArgs = {data: state.input, fromUnit: action.counterUnit, toUnit: action.type };\n\n  switch (action.type) {\n    case Unit.LENGTH :\n      return {input: 0, output: 0, fromSymbol: 'mm', toSymbol: 'cm'};\n    case Unit.WEIGHT :\n      return {input: 0, output: 0, fromSymbol: 'mg', toSymbol: 'g '};\n    case Unit.TEMP:\n      return {input: 0, output: 0, fromSymbol: '°F', toSymbol: '°C'};\n    case CONVERT:\n      return evaluate(action);\n    case OA.FROMMILLIMETER:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOMILLIMETER:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMCENTIMETER:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOCENTIMETER:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMINCH:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOINCH:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMFEET:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOFEET:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMMETER:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOMETER:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMKILOMETER:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOKILOMETER:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMFAHRENHEIT:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOFAHRENHEIT:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMCELSIUS:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOCELSIUS:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMKELVIN:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOKELVIN:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMMILLIGRAM:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOMILLIGRAM:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMGRAM:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOGRAM:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMOUNCE:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOOUNCE:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMPOUND:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOPOUND:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    case OA.FROMKILOGRAM:\n      return Object.assign({}, evaluate(fromArgs), {fromSymbol: action.symbol});\n    case OA.TOKILOGRAM:\n      return Object.assign({}, evaluate(toArgs), {toSymbol: action.symbol});\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers} from 'redux';\nimport unitSelectionReducer from './../reducers/selectionReducer.js';\nimport conversionOptionReducer from './../reducers/optionReducer.js';\nimport convertReducer from './../reducers/conversionReducer.js';\n\nexport const store = createStore(  combineReducers({\n    select: unitSelectionReducer,\n    option: conversionOptionReducer,\n    convert: convertReducer\n  }),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as OA from './../actions/optionActions.js';\nimport {bindActionCreators} from 'redux';\n\n// Dropdown menu component with unit option\nclass Dropdown extends React.Component{\n  render(){\n    const unitValues = {\n      'fromMillimeter': ['Millimeter',()=>this.props.convertFromMillimeter(this.props.counterUnit),'fmm'],\n      'fromCentimeter': ['Centimeter', ()=>this.props.convertFromCentimeter(this.props.counterUnit),'fcm'],\n      'fromInch': ['Inch', ()=>this.props.convertFromInch(this.props.counterUnit),'fin'],\n      'fromFeet': ['Feet', ()=>this.props.convertFromFeet(this.props.counterUnit),'fft'],\n      'fromMeter': ['Meter', ()=>this.props.convertFromMeter(this.props.counterUnit),'fmt'],\n      'fromKilometer': ['Kilometer', ()=>this.props.convertFromKiloMeter(this.props.counterUnit),'fkm'],\n\n      'toMillimeter': ['Millimeter',()=>this.props.convertToMillimeter(this.props.counterUnit),'tmm'],\n      'toCentimeter': ['Centimeter', ()=>this.props.convertToCentimeter(this.props.counterUnit),'tcm'],\n      'toInch': ['Inch', ()=>this.props.convertToInch(this.props.counterUnit),'tin'],\n      'toFeet': ['Feet', ()=>this.props.convertToFeet(this.props.counterUnit),'tft'],\n      'toMeter': ['Meter', ()=>this.props.convertToMeter(this.props.counterUnit),'tmt'],\n      'toKilometer': ['Kilometer', ()=>this.props.convertToKiloMeter(this.props.counterUnit),'tkm'],\n\n      'fromFahrenheit': ['Fahrenheit',()=>this.props.convertFromFahrenheit(this.props.counterUnit), 'ffh'],\n      'fromCelsius': ['Celsius', ()=>this.props.convertFromCelsius(this.props.counterUnit), 'fcs'],\n      'fromKelvin': ['Kelvin', ()=>this.props.convertFromKelvin(this.props.counterUnit), 'fkn'],\n\n      'toFahrenheit': ['Fahrenheit',()=>this.props.convertToFahrenheit(this.props.counterUnit), 'tfh'],\n      'toCelsius': ['Celsius', ()=>this.props.convertToCelsius(this.props.counterUnit), 'tcs'],\n      'toKelvin': ['Kelvin', ()=>this.props.convertToKelvin(this.props.counterUnit), 'tkn'],\n\n\n      'fromMilligram': ['Milligram',()=> this.props.convertFromMillgram(this.props.counterUnit), 'fmg'],\n      'fromGram': ['Gram', ()=>this.props.convertFromGram(this.props.counterUnit), 'fg'],\n      'fromOunce': ['Ounce', ()=>this.props.convertFromOunce(this.props.counterUnit), 'foz'],\n      'fromPound': ['Pound', ()=>this.props.convertFromPound(this.props.counterUnit), 'flb'],\n      'fromKilogram': ['Kilogram', ()=>this.props.convertFromKilogram(this.props.counterUnit), 'fkg'],\n\n      'toMilligram': ['Milligram', ()=>this.props.convertToMillgram(this.props.counterUnit), 'tmg'],\n      'toGram': ['Gram', ()=>this.props.convertToGram(this.props.counterUnit), 'tg'],\n      'toOunce': ['Ounce', ()=>this.props.convertToOunce(this.props.counterUnit), 'toz'],\n      'toPound': ['Pound', ()=>this.props.convertToPound(this.props.counterUnit), 'tlb'],\n      'toKilogram': ['Kilogram', ()=>this.props.convertToKilogram(this.props.counterUnit), 'tkg']\n    };\n\n    return(\n      <div className='dropdown'>\n      <button className='dropdownBtn' > {unitValues[this.props.label][0]} </button>\n    <div className='content' >\n      {this.props.choice.map((item,id) => (\n        <div key={unitValues[item][2]} id={unitValues[item][2]} onClick={unitValues[item][1]}>{unitValues[item][0]}</div>\n      ))}\n    </div>\n      </div>\n    );\n  }\n}\n\n// Dispatching actions needed for this component\nconst mapDispatchToProps = (dispatch)=>{\n  return bindActionCreators({\n    convertFromMillimeter: OA.fromMillimeterAction,\n    convertFromCentimeter: OA.fromCentimeterAction,\n    convertFromInch: OA.fromInchAction,\n    convertFromFeet: OA.fromFeetAction,\n    convertFromMeter: OA.fromMeterAction,\n    convertFromKiloMeter: OA.fromKilometerAction,\n\n    convertToMillimeter: OA.toMillimeterAction,\n    convertToCentimeter: OA.toCentimeterAction,\n    convertToInch: OA.toInchAction,\n    convertToFeet: OA.toFeetAction,\n    convertToMeter: OA.toMeterAction,\n    convertToKiloMeter: OA.toKilometerAction,\n\n    convertFromFahrenheit: OA.fromFahrenheitAction,\n    convertFromCelsius: OA.fromCelsiusAction,\n    convertFromKelvin: OA.fromKelvinAction,\n\n    convertToFahrenheit: OA.toFahrenheitAction,\n    convertToCelsius: OA.toCelsiusAction,\n    convertToKelvin: OA.toKelvinAction,\n\n    convertToMillgram: OA.toMilligramAction,\n    convertToGram: OA.toGramAction,\n    convertToOunce: OA.toOunceAction,\n    convertToPound: OA.toPoundAction,\n    convertToKilogram: OA.toKilogramAction,\n\n    convertFromMillgram: OA.fromMilligramAction,\n    convertFromGram: OA.fromGramAction,\n    convertFromOunce: OA.fromOunceAction,\n    convertFromPound: OA.fromPoundAction,\n    convertFromKilogram: OA.fromKilogramAction\n  }, dispatch);\n}\n\n// Connect the component to the store\nexport default connect(null, mapDispatchToProps)(Dropdown);\n","import React from 'react';\nimport Dropdown from './dropdown.js';\nimport {connect} from 'react-redux';\n\n// Container componnent for choosing the convert To unit and the convert From unit\nclass Option extends React.Component {\n  render(){\n    return(\n      <div id='conversion-unit'>\n        <Dropdown {...{label:this.props.fromUnit,\n                       choice: this.props.fromUnitOptions,\n                       counterUnit: this.props.toUnit\n                     }}/>\n        <div id='direction'><i class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i>\n</div>\n        <Dropdown {...{label:this.props.toUnit,\n                       choice: this.props.toUnitOptions,\n                       counterUnit: this.props.fromUnit\n                     }} />\n      </div>\n    );\n  }\n}\n\n// States from optionReducer to connect to this component\nconst mapStateToProps = (state)=>{\n  return {\n    fromUnit: state.option.fromUnit,\n    toUnit: state.option.toUnit,\n    fromUnitOptions: state.option.fromUnitOptions,\n    toUnitOptions: state.option.toUnitOptions\n  }\n}\n\n// Connect the component to the store\nexport default connect(mapStateToProps, null)(Option);\n","import React from 'react';\nimport {lengthAction, weigthAction, tempAction} from './../actions/unitActions.js';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\n// Buttons for selecting the units used in conversion\nconst Button = (props)=>{\n  return(\n    <div onClick={props.callback} id={props.id} tabIndex='0' className={props.style}\n     value={props.id}>{props.label} </div>\n  );\n};\n\n// Unit selection component containing 3 buttons for selecting measurement units\nclass Control extends React.Component{\n  render(){\n    var lengthValue = {callback: this.props.selectLength, id:'length',\n                       label:'Length', style: this.props.style[0]};\n    var weightValue = {callback:this.props.selectWeight, id:'weight',\n                       label:'Weight', style: this.props.style[1]};\n    var tempValue =   {callback:  this.props.selectTemp, id:'temperature',\n                       label:'Temperature', style: this.props.style[2]};\n    return(\n      <div id='control'>\n        <Button {...lengthValue}/>\n        <Button {...weightValue}/>\n        <Button {...tempValue}/>\n        </div>\n    );\n  }\n}\n\n// States needed for this component\nconst mapStateToProps = (state)=>{\n  return {\n    style: state.select.unitClass\n  }\n};\n\n// Dispatching actions needed for this component\nconst mapDispatchToProps = (dispatch)=>{\n  return bindActionCreators({\n    selectLength: lengthAction,\n    selectWeight: weigthAction,\n    selectTemp: tempAction\n    }, dispatch);\n};\n\n// Connect the component to the store\nexport  default connect(mapStateToProps,mapDispatchToProps)(Control);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {convertAction} from './../actions/convertActions.js';\n\n// Container component for conversion input vale and the converted display value\nclass Interact extends React.Component{\n  render(){\n    return(\n      <div id='results'>\n        <div id='begin'>\n          <input id='input' type='text' min='0'  value={this.props.input} onChange={(event)=>this.props.convert(event, this.props.fromUnit,this.props.toUnit)} />\n          <span>{this.props.fromSymbol}</span>\n        </div>\n        <div id='end'>\n          <div id='display' >{ this.props.output}\n          </div>\n          <span> {this.props.toSymbol}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\n// States needed for this component\nconst mapStateToProps = (state)=>{\n  return{\n    input: state.convert.input,\n    output: state.convert.output,\n    fromSymbol: state.convert.fromSymbol,\n    toSymbol: state.convert.toSymbol,\n    fromUnit: state.option.fromUnit,\n    toUnit: state.option.toUnit\n  }\n};\n\n// Dispatching actions needed for this component\nconst mapDispatchToProps = (dispatch)=>{\n  return bindActionCreators({\n    convert: convertAction\n  },dispatch);\n}\n\n// Connect the component to the store\nexport default connect(mapStateToProps, mapDispatchToProps)(Interact);\n","import React from 'react';\nimport Option from './options.js';\nimport Control from './control.js';\nimport Interact from './interact.js';\n\n// Main application Component\nexport default class Convert extends React.Component{\n  render(){\n    return(\n      <div>\n        <nav >\n          <i className=\"fa fa-rebel\" aria-hidden=\"true\"></i>\n          <span>Rebel Conversion</span>\n        </nav>\n        <div id='main-container' >\n          <div id='boundary'>\n            <Control />\n            <Option  />\n            <Interact />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './style/index.scss';\nimport './style/convert.scss';\nimport './style/control.scss';\nimport './style/option.scss';\nimport './style/interact.scss';\nimport ReactDOM from 'react-dom';\nimport {store} from './store/store.js';\nimport { Provider } from 'react-redux';\nimport Convert from './components/convert.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Convert />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}